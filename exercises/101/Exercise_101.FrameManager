{"number":"101","directions":"<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 12pt;\"><b><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Exercise05: <strong>Use a variable to set how long an LED blinks</strong>.</span></b></span></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt;\"> </p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">NEW:</span></i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">  <strong><em>int x;</em></strong></span></b></span></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt; margin-left: 36pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">DESCRIPTION:</span></i></b> <b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><strong><em>Creates variable x.</em></strong> <strong><em>This creates a location in Arduino&rsquo;s memory named &ldquo;x&rdquo; </em></strong><strong>that is used </strong><strong><em>to store an integer value. Integers can have values as small as -32,768 and as large as +32768</em></strong>.</span></i></b></span></p>\n<p><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">ASIDE:</span></i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">  <strong><em>Why use variables? Because variables allow our programs to be dynamic / flexible</em></strong></span></b></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">NEW:</span></i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">  <strong><em>x = 1000</em></strong><strong><em>;</em></strong></span></b></span></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt; margin-left: 36pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">DESCRIPTION:</span></i></b> <b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><strong><em>Stores or puts &ldquo;1000&rdquo; in the &ldquo;x&rdquo; memory location</em></strong>.</span></i></b></span></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt; margin-left: 36pt;\">&nbsp;</p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">NEW:</span></i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">  <strong><em>delay(x)</em></strong><strong><em>;</em></strong></span></b></span></p>\n<p style=\"line-height: 1; margin-top: 0pt; margin-bottom: 0pt; margin-left: 36pt;\"><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">DESCRIPTION:</span></i></b> <b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><strong><em>Tells Arduino to delay &ldquo;x&rdquo; milliseconds – where &ldquo;x&rdquo; is an integer value stored in the Arduino&rsquo;s memory</em></strong>.</span></i></b></span></p>\n<p><span style=\"font-size: 12pt;\"><b><i><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">ACTIVITIES:</span></i></b></span></p>\n<ol style=\"margin-top: 0pt; margin-bottom: 0pt; font-size: 13px;\">\n  <li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt;\"><span style=\"font-family: Arial; color: #000000; background-color: #ffffff; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Copy the program from Starting Point Exercise05 into the Arduino IDE. </span></span></li>\n<li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt;\"><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Compile and upload this program to the Arduino and verify that LED 2 turns ON for a 1 second and then OFF for 5 seconds and repeats over and over…. OR we can say that LED 2 BLINKS ON for <strong>1 second</strong> and OFF for 5 seconds and repeats over and over…..</span></span></li>\n<li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt;\"><span style=\"font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Modify the program so that LED 2 BLINKS ON for <strong>3</strong> <strong>seconds </strong>and OFF for 5 seconds ….…</span></span></li>\n<li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Modify the program so that LED 2 BLINKS ON for <strong>0.5</strong> <strong>seconds </strong>and OFF for 5 seconds …...</span></li>\n<li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Modify the program so that the variable name is <strong>t</strong> instead of <strong>x</strong>.</span></li>\n<li style=\"list-style-type: decimal; font-size: 13px; font-family: Arial; color: #000000; background-color: transparent; font-variant: normal; text-decoration: none; vertical-align: baseline;\"><span style=\"font-size: 12pt; font-family: Arial; color: #000000; background-color: #ffffff; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Save the completed sketch as YourInitials_Exercise05 in: Documents – Arduino – Exercises</span></li>\n<li><span style=\"font-size: 12pt; font-family:Arial;\"><strong style=\"font-weight: normal;\">Copy</strong> the code into the <a href=\"http://dpengineering.github.io/giffer-reborn/\" target=\"_blank\" rel=\"noopener\">Giffer</a> website</span></li>\n<li><span style=\"font-size: 12pt; font-family:Arial;\">Enter your <em>name</em> and <em>exercise number.</em></span></li>\n<li><span style=\"font-size: 12pt; font-family:Arial;\"><strong style=\"font-weight: normal;\">Select</strong> the <i>Run and Grade </i>button.</span></li>\n<li><span style=\"font-size: 12pt; font-family: Arial; color: #000000; background-color: #ffffff; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span face=\"RobotoRegularNew, helvetica, arial, sans-serif\">Look at the resulting Output image and make sure it is</span> correct (<span style=\"color: #008000;\"><strong style=\"font-family:Arial, sans-serif !important; font-weight: normal;\">Correct</strong></span> at lower part of image)</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\">If it is Correct -  use the <strong style=\"font-family:Arial, sans-serif !important; font-weight: normal;\">Copy Page</strong> button to copy the evidence that you have correctly completed the exercise to clipboard.</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\">Go to <strong style=\"font-family:Arial, sans-serif !important; font-weight: normal;\">CL 10.3.05 Upload Completed Exercise05</strong>:  And upload evidence that you have completed Exercise05</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\"><strong style=\"font-family:Arial, sans-serif !important; font-weight: normal;\">Click </strong>\"Prepare an answer\" on NEO</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\">Click the \"&lt;&gt;\" (<em>Source code</em>) button.</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\">Paste by pressing CTRL + V</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\"><strong style=\"font-family:Arial, sans-serif !important; font-weight: normal;\">Click </strong>&quot;<strong><em>Save and submit for grading</em></strong>&quot;</span></li>\n<li><span style=\"color: #222222; font-family: Arial; font-weight: 300; font-size: 12pt;\">If you made changes to the code in Giffer, then Copy the code from Giffer and paste it into the Arduino and re-save it as: <em>YourInitials_Exercise05 - </em>in your <em>Documents/Arduino/Exercises</em> Folder.</span> </li>\n</ol>\n","startingCode":"// ***************ACTIVITIES TO CHECK WHILE GRADING BEGIN*******************\n//\n// 1.\tLED2 should go ON for 500ms\n// 2.\tThen LED2 OFF for 5 seconds and then repeat\n// 3.\tChange name of variable from x => t\n// 4.\tChange value of variable t = 500;\n//\n// ***************ACTIVITIES TO CHECK WHILE GRADING END*********************\n\nvoid setup()\n{\n  pinMode(2, OUTPUT); // Enables pin 2 on the Arduino to Send enough power to turn on a LED\n}\n\nvoid loop() // turn on LED2 on for ½ second then turn it off and wait 5 seconds then repeat\n{\n  int t;                            // creates an integer t\n  t = 500;                          // puts the value 500 in the Arduinos t memory location\n  digitalWrite(2, HIGH);\n  delay(t);                         // delay(t); means that the Arduino looks at memory location t\n                                    // and delays t milliseconds\n  digitalWrite(2, LOW);\n  delay(t);                         // delay(t); means that the Arduino looks at memory location t\n                                    // and delays t milliseconds\n  delay(4500);  // wait 4500ms or 4.5 seconds before going to the next line\n}\n\n// ************************************************BOARD+CONFIGURATION FOOTER BEGIN****************************************************\n//\n// Please do not modify the content of the footer, except for what comes between the triple hashtags (###...###). Thank you!\n// If you're curious, the #%! is to help parse the text for the board and configuration information.\n// In the following line of commented code, please ensure that the board type is correct (either \"LED Board\" or \"KS Board\").\n// If you would like additional digital or analog inputs in the exercise, please enter them with the following format:\n// (Keep in mind that the time is in units of milliseconds and the value can range from 0 to 1023.)\n// EXAMPLE 1: \"board\": {\"type\":\"LED Board\", \"setup\":{\"pinKeyframes\":[]}}\n// EXAMPLE 2: \"board\": {\"type\":\"KS Board\", \"setup\":{\"pinKeyframes\":[{\"time\":0,\"pin\":5,\"value\":0},{\"time\":2750,\"pin\":5,\"value\":260}]}}\n//\n// ACTUAL:#%!\"board\": {\"type\":\"LED Board\", \"setup\":{\"pinKeyframes\":[]}}#%!\n//\n// *************************************************BOARD+CONFIGURATION FOOTER END*****************************************************\n\n","suffix":"int main() {\n  setup();\n  loop();\n  return 0;\n}\n","board":{"type":"LED Board","setup":{"pinKeyframes":[]}},"frameManager":{"frames":[{"ledModes":{"2":1},"ledStates":{"2":1023},"postDelay":500,"outputText":[]},{"ledModes":{"2":1},"ledStates":{"2":0},"postDelay":500,"outputText":[]},{"ledModes":{"2":1},"ledStates":{"2":0},"postDelay":4500,"outputText":[]},{"ledModes":{"2":1},"ledStates":{"2":0},"postDelay":0,"outputText":[]}],"currentFrame":3,"elapsedTime":5500,"isGraded":false}}